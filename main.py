#импортируем библиотеку telebot для написания бота
import telebot
#подключаем модуль Image из библиотеки PIL для работы с изображением
from PIL import Image
# подключаем библиотеку pytesseract ля использования нейронной сети,
# распознающей текст на изображении
import pytesseract

# Инициализация бота
    #импортируем класс TeleBot из библиотеки telebot
    #в качестве аргумента классу передаем Токен чат-бота,
    #полученный через чат-бот BotFather
    #в переменную bot кладем обьект нашего бота
bot = telebot.TeleBot('7130680227:AAGIEyyxcODT_PTxmRNiji4HLKliQFD9N7Y')


# Обработка команды /start
    #обьявляем декоратор @bot.message_handler,
    #чтобы функция start_message была обработчиком сообщений
    #в качестве аргумента декоратору передаем список команд,
    #на которые будет реагировать данная функция
    #в качестве аргумента функции передаем сообщение от пользователя
@bot.message_handler(commands=['start','help'])
def start_message(message):
    #обращаемся к методу send_message обьекта класса TeleBot
    #в 1-го качестве аргумента методу передаем
    #message.chat.id - id чата, из которого пришло сообщение message
    #2й аргумент-ответ, который бот прищлкт пользователю
    bot.send_message(message.chat.id, 'Привет! Отправь мне изображение с текстом для распознавания.')


# Обработка изображений
    # обьявляем декоратор @bot.message_handler,
    # чтобы функция handle_image была обработчиком сообщений
    # в качестве аргумента декоратору передаем список типов сообщений,
    # на которые будет реагировать данная функция
    # в качестве аргумента функции передаем сообщение от пользователя
@bot.message_handler(content_types=['photo'])
def handle_image(message):
    #id фотографии
    #message.photo-фотография из сообщения
    #-1 - обращение к последнему жлементу списка аргументов
    file_id = message.photo[-1].file_id
    #получаем файл с id = file_id
    #c помощью метода get_file
    file_info = bot.get_file(file_id)
    #скачиваем файл для обработки с помощью метода
    #download_file, передаем путь к файлу (file_path)
    file = bot.download_file(file_info.file_path)

    # Сохраняем изображение
        #открываем произвольный файл image,jpg
        #в режиме бинарной записи (wb) c именем переменной new_file
    with open("image.jpg", 'wb') as new_file:
        #записываем скачанный файл в файл с фото с помощью
        #метода write
        new_file.write(file)

    # Распознаем текст на изображении
        #работаем с изображением с помощью Image
        # из библиотеки PIL c помощью метода open
    img = Image.open("image.jpg")
    # к полученному файлу применяем метод image_to_string
    #библиотеки pytesseract, который распознает текст
    # из файла с картинокй и передаем как аргумент
    # наше изображение
    text = pytesseract.image_to_string(img)

    # Отправляем результат пользователю
    bot.send_message(message.chat.id, f"Текст на изображении: {text}")


# Обработка иных типов сообщений
    #обьявляем декоратор @bot.message_handler,
    #чтобы функция default_handler была обработчиком сообщений
    #не передаем аргументов, чтобы бот реагировал на все сообщения,
    #фото будет попадать в обработчик handle_image, поскольку
    #он выше в коде, поэтому фотов обработчик ниже идти не будет
    #и программа будет корректно работать
    #в качестве аргумента функции передаем сообщение от пользователя
@bot.message_handler()
def default_handler(message):
    #обращаемся к методу send_message обьекта класса TeleBot
    #в  качестве 1-го аргумента методу передаем
    #message.chat.id - id чата, из которого пришло сообщение message
    #2й аргумент-ответ, который бот прищлкт пользователю
    bot.send_message(message.chat.id, 'Это не фото. Пожалуйста, отправьте фото :)')

# Запуск бота
bot.polling()
